[{"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\index.js":"1","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\reportWebVitals.js":"2","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\pages\\index.js":"3","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\store\\saga\\index.js":"4","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\store\\index.js":"5","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\store\\saga\\relateddois.saga.js":"6","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\components\\Header.js":"7","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\store\\saga\\articles.saga.js":"8","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\pages\\RelatedDoisLoadingPage\\index.js":"9","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\pages\\ArticlesLoadingPage\\index.js":"10","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\store\\reducer\\index.js":"11","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\pages\\SearchResultsPage\\index.js":"12","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\store\\actions\\articles.action.js":"13","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\pages\\ArticleDetailsPage\\index.js":"14","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\pages\\Home\\index.js":"15","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\services\\article.service.js":"16","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\services\\doi.service.js":"17","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\components\\Article.js":"18","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\store\\states\\index.js":"19","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\components\\RelatedDoiDetail.js":"20","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\utils\\function.util.js":"21","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\components\\RelatedDoisList.js":"22","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\services\\axios.service.js":"23","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\utils\\index.js":"24","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\components\\NetworkDiagram.js":"25"},{"size":758,"mtime":1608053436418,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":1335,"mtime":1608050936886,"results":"29","hashOfConfig":"27"},{"size":273,"mtime":1608050994467,"results":"30","hashOfConfig":"27"},{"size":502,"mtime":1608279074197,"results":"31","hashOfConfig":"27"},{"size":5318,"mtime":1608279198453,"results":"32","hashOfConfig":"27"},{"size":3809,"mtime":1608279198410,"results":"33","hashOfConfig":"27"},{"size":894,"mtime":1608080790773,"results":"34","hashOfConfig":"27"},{"size":2833,"mtime":1608279198440,"results":"35","hashOfConfig":"27"},{"size":1606,"mtime":1608084833640,"results":"36","hashOfConfig":"27"},{"size":4048,"mtime":1608279198452,"results":"37","hashOfConfig":"27"},{"size":3537,"mtime":1608050490433,"results":"38","hashOfConfig":"27"},{"size":1467,"mtime":1608279198442,"results":"39","hashOfConfig":"27"},{"size":1992,"mtime":1608279784061,"results":"40","hashOfConfig":"27"},{"size":2831,"mtime":1608051158829,"results":"41","hashOfConfig":"27"},{"size":468,"mtime":1608191229145,"results":"42","hashOfConfig":"27"},{"size":1822,"mtime":1608279198441,"results":"43","hashOfConfig":"27"},{"size":3754,"mtime":1608085114831,"results":"44","hashOfConfig":"27"},{"size":979,"mtime":1608279198454,"results":"45","hashOfConfig":"27"},{"size":7973,"mtime":1608279198432,"results":"46","hashOfConfig":"27"},{"size":2911,"mtime":1608084396054,"results":"47","hashOfConfig":"27"},{"size":15046,"mtime":1608279198438,"results":"48","hashOfConfig":"27"},{"size":1568,"mtime":1608279198441,"results":"49","hashOfConfig":"27"},{"size":32,"mtime":1607939399007,"results":"50","hashOfConfig":"27"},{"size":9763,"mtime":1608279198422,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"zoyff1",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"54"},"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\index.js",[],["112","113"],"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\reportWebVitals.js",[],"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\pages\\index.js",[],"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\store\\saga\\index.js",[],"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\store\\index.js",["114"],"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\store\\saga\\relateddois.saga.js",["115","116","117","118"],"import { all, call, put, takeLatest } from 'redux-saga/effects';\r\nimport * as articlesAction from '../actions/articles.action'\r\nimport { DoiService } from '../../services/doi.service'\r\n\r\nexport default function* root() {\r\n    yield all([\r\n        takeLatest('GET_RELATED_DOIS', getRelatedDois),\r\n        takeLatest('LOAD_METADATA_OF_DOI', loadDoiMetadata),\r\n    ]);\r\n}\r\n\r\nexport function* getRelatedDois(action) {\r\n    try {\r\n        const { data } = yield call(\r\n            DoiService.endpoint_get_related_dois,\r\n            action.payload,\r\n        );\r\n\r\n        yield put(\r\n            articlesAction.storeRelatedDois({\r\n                relatedDois: data,\r\n            })\r\n        )\r\n    } catch (error) {\r\n        alert('failed fetching papers');\r\n        yield put(\r\n            articlesAction.failedFetchingRelatedPapers()\r\n        )\r\n    }\r\n}\r\n\r\nexport function* loadDoiMetadata(action) {\r\n    try {\r\n        const { data } = yield call(\r\n            DoiService.endpoint_get_meta_data,\r\n            action.payload,\r\n        );\r\n\r\n        yield put(\r\n            articlesAction.storeDoiMetadata({\r\n                metaData: data,\r\n                citing: action.payload\r\n            })\r\n        )\r\n    } catch (error) {\r\n        alert('failed loading metadata');\r\n    }\r\n}","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\components\\Header.js",["119"],"import {React , useState} from 'react';\nimport { connect } from 'react-redux';\nimport {totalState }from '../store/states';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '35ch',\n      '&:focus': {\n        width: '40ch',\n      },\n    },\n  },\n}));\n\nconst Header = (props) => {\n  const { searchArticleInputValue, setSearchArticleInputValue, setCurrentPage } = props;\n  const [inputValue, setInputValue] = useState('')\n\n  const classes = useStyles();\n  const handleKeyUp = (e) => {\n    if(e.nativeEvent.keyCode === 13) {\n      if(inputValue !== '') {\n        console.log(inputValue);\n        setSearchArticleInputValue(inputValue);\n        // history.push(\"/articles/loading\");\n        setCurrentPage('ArticlesLoading');\n      }\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            <img src=\"logo.png\"></img>\n            Science Garden\n          </Typography>\n          {searchArticleInputValue !== '' ?\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon id=\"searchIcon\" />\n              </div>\n              <InputBase\n                placeholder='Search Articles'\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                onKeyUp={handleKeyUp}\n                onChange={(e) => setInputValue(e.target.value)}\n              />\n            </div> :\n            \"\"\n          }\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n};\n\nconst mapStateToProps=(state = totalState)=>{\n\n  return {\n    searchArticleInputValue: state.searchArticleInputValue,\n    onFetchingArticles: state.onFetchingArticles,\n  }\n}\n\nconst mapStateToDispatch=(dispatch)=>{\n  return {\n    setSearchArticleInputValue: (payload) => {\n      dispatch({type:'SET_SEARCH_ARTICLE_INPUT_VALUE', payload});\n    },\n    setCurrentPage: (payload) => {\n      dispatch({type:'SET_CURRENT_PAGE', payload});\n    }\n  }\n}\nHeader.propTypes = {};\n\nHeader.defaultProps = {};\n\nexport default connect(mapStateToProps, mapStateToDispatch)(Header);\n","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\store\\saga\\articles.saga.js",[],"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\pages\\RelatedDoisLoadingPage\\index.js",["120","121","122","123","124"],"import {React, useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst RelatedDoisLoadingPage = (props) => {\r\n\r\n  const { currentOriginalPaper, onFetchingRelatedDois, getRelatedDois,setCurrentPage } = props;\r\n  \r\n\r\n  useEffect(() => {\r\n    getRelatedDois(currentOriginalPaper.doi);\r\n  }, []);\r\n\r\n\r\n  if(onFetchingRelatedDois === false) {\r\n    setCurrentPage('ArticleDetailsPage');\r\n  }\r\n\r\n  return(\r\n  <div style={{position: \"fixed\", width: \"100%\", left: \"0px\", height: \"calc(100vh - 65px)\", backgroundColor: \"#ffff\", display: \"flex\", justifyContent: \"center\", verticalAlign: \"middle\", alignItems: \"center\"}}>\r\n    <div style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"auto\", marginBottom: \"auto\"}}>\r\n      <h1>Loading graph...</h1><br></br>\r\n      <p>This normally takes a few seconds, but on rare occasions may take up to several minutes.</p>\r\n      <b>Status: Fetching paper </b>\r\n    </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps=(state)=>{\r\n  \r\n  return {\r\n    currentOriginalPaper: state.currentOriginalPaper,\r\n    onFetchingRelatedDois: state.onFetchingRelatedDois\r\n  }\r\n}\r\n\r\nconst mapStateToDispatch=(dispatch)=>{\r\n  return {\r\n    getRelatedDois: (payload)=>{\r\n      dispatch({type:'GET_RELATED_DOIS',payload});\r\n    },\r\n    setCurrentPage: (payload) => {\r\n      dispatch({type:'SET_CURRENT_PAGE', payload});\r\n    }\r\n  }\r\n}\r\n\r\nRelatedDoisLoadingPage.propTypes = {\r\n  \r\n};\r\n\r\nRelatedDoisLoadingPage.defaultProps = {};\r\n\r\nexport default connect(mapStateToProps, mapStateToDispatch)(RelatedDoisLoadingPage);\r\n","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\pages\\ArticlesLoadingPage\\index.js",["125"],"import {React, useEffect} from 'react';\nimport { connect } from 'react-redux';\n\nconst ArticlesLoadingPage = (props) => {\n\n  const { searchArticleInputValue, curOffset, onFetchingArticles, getArticles, setCurrentPage } = props;\n  \n\n  useEffect(() => {\n    getArticles(searchArticleInputValue, {\n      itemsPerPage: 21,\n      currentOffset: curOffset,\n    })\n  }, []);\n\n\n  if(onFetchingArticles === false) {\n    setCurrentPage('SearchResultsPage');\n  }\n\n  return(\n  <div style={{position: \"fixed\", width: \"100%\", left: \"0px\", height: \"calc(100vh - 65px)\", backgroundColor: \"#ffff\", display: \"flex\", justifyContent: \"center\", verticalAlign: \"middle\", alignItems: \"center\"}}>\n    <div style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"auto\", marginBottom: \"auto\"}}>\n      <h1>Loading articles...</h1><br></br>\n      <p>This normally takes a few seconds, but on rare occasions may take up to several minutes.</p>\n      <b>Status: Fetching articles </b>\n    </div>\n  </div>\n  );\n};\n\nconst mapStateToProps=(state)=>{\n  \n  return {\n    searchArticleInputValue: state.searchArticleInputValue,\n    onFetchingArticles: state.onFetchingArticles,\n    curOffset: state.curOffset,\n  }\n}\n\nconst mapStateToDispatch=(dispatch)=>{\n  return {\n    getArticles:(input, extraParams)=>{\n      dispatch({type:'GET_ALL_ARTICLES',input, extraParams});\n    },\n    setCurrentPage: (payload) => {\n      dispatch({type:'SET_CURRENT_PAGE', payload});\n    }\n  }\n}\n\nArticlesLoadingPage.propTypes = {\n  \n};\n\nArticlesLoadingPage.defaultProps = {};\n\nexport default connect(mapStateToProps, mapStateToDispatch)(ArticlesLoadingPage);\n","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\store\\reducer\\index.js",[],"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\pages\\SearchResultsPage\\index.js",[],"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\store\\actions\\articles.action.js",[],"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\pages\\ArticleDetailsPage\\index.js",["126","127","128"],"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\pages\\Home\\index.js",["129"],"import {React, useState } from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxHeight: \"85%\",\n    overflow: \"auto\",\n  },\n  container: {\n    height: \"auto\",\n    overflow: \"auto\",\n  },\n  mainMsg: {\n\n    paddingTop: \"91px\",\n    paddingBottom: \"41px\",\n  },\n  subMsg: {\n    fontSize: \"24px\",\n    lineHeight: \"28px\",\n    marginBottom: \".5rem\",\n  },\n  searchBox: {\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translate(-50%, 0)\",\n    borderRadius: \"20px\",\n    width: \"80%\",\n    maxWidth: \"600px\",\n  },\n}));\n\n\nconst Home = (props) => {\n  const classes = useStyles();\n  const { setSearchArticleInputValue, setCurrentPage } = props;\n  const [inputValue, setInputValue] = useState('')\n  const handleKeyUp = (e) => {\n    if(e.nativeEvent.keyCode === 13) {\n      if(inputValue !== '') {\n        console.log(inputValue);\n        setSearchArticleInputValue(inputValue);\n        setCurrentPage('ArticlesLoading');\n      }\n    }\n  };\n  \n  return(\n    <div style={{ textAlign: 'center' }}>\n        <Typography\n          className={classes.mainMsg}\n          variant=\"h4\"\n          color=\"textSecondary\"\n        >Explore connected papers in a visual graph</Typography>\n        <Typography\n          className={classes.subMsg}\n          variant=\"h5\"\n          color=\"textSecondary\"\n        >To start, enter a paper identifier</Typography>\n        <div style={{ marginTop: \"30px\" }}>\n          <Toolbar>\n            <TextField\n              className={classes.search, classes.searchBox}\n              onKeyUp={handleKeyUp}\n              label=\"Search field\"\n              placeholder='For example \"DARTS: Differentiable Architecture Search\"'\n              variant=\"outlined\"\n              value={inputValue} \n\t\t\t        onChange={(e) => setInputValue(e.target.value)}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              \n            />\n          </Toolbar>\n        </div>\n      </div>\n\n  );\n};\n\nconst mapStateToProps=(state)=>{\n\n  return {\n    isLoading: state.isLoading,\n  }\n}\n\nconst mapStateToDispatch=(dispatch)=>{\n  return {\n    getArticles:(input, extraParams)=>{\n      dispatch({type:'GET_ALL_ARTICLES',input, extraParams});\n    },\n    setSearchArticleInputValue: (payload) => {\n      dispatch({type:'SET_SEARCH_ARTICLE_INPUT_VALUE', payload});\n    },\n    setCurrentPage: (payload) => {\n      dispatch({type:'SET_CURRENT_PAGE', payload});\n    }\n  }\n}\n\nHome.propTypes = {\n  \n};\n\nHome.defaultProps = {};\n\nexport default connect(mapStateToProps, mapStateToDispatch)(Home);\n","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\services\\article.service.js",[],"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\services\\doi.service.js",["130","131"],"import { AxiosService } from './axios.service'\r\n\r\nexport const DoiService = (function () {\r\n    const endpoint_get_related_dois = async (doi) => {\r\n        let endpoint = \"https://opencitations.net/index/coci/api/v1/citations/\"\r\n        let data = AxiosService.get(endpoint + doi);\r\n        console.log(endpoint + doi);\r\n        console.log('related dois!')\r\n        console.log(data);\r\n        return data;\r\n    };\r\n\r\n    const endpoint_get_meta_data = async (doi) => {\r\n        let endpoint = \"https://opencitations.net/index/coci/api/v1/metadata/\"\r\n        let data = AxiosService.get(endpoint + doi);\r\n        return data;\r\n    }\r\n\r\n    return {\r\n        endpoint_get_related_dois,\r\n        endpoint_get_meta_data\r\n    };\r\n})();\r\n","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\components\\Article.js",[],"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\store\\states\\index.js",[],"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\components\\RelatedDoiDetail.js",["132","133","134"],"import {React, useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {totalState }from '../store/states';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst drawerWidth = \"calc(20%)\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    position: \"absolute\",\r\n    top: \"64px\",\r\n    right: \"0px\",\r\n    height: \"calc(100% - 65px)\",\r\n    boxShadow: \"3px 3px 20px\"\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-start',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  lineHeight1_2em: {\r\n    lineHeight: \"1.2em\"\r\n  },\r\n  lineHeight1_5em: {\r\n    lineHeight: \"1.5em\"\r\n  },\r\n  media: {\r\n    // ⚠️ object-fit is not supported by IE11.\r\n    objectFit: \"cover\",\r\n  },\r\n}));\r\n\r\nconst RelatedDoiDetail = (props) => {\r\n  const { selectedDoi, relatedDoiState,  loadMetaDataInfo, setCurrentPage, setCurrentOriginalPaper, setFetchingRelatedDoisStatus} = props;\r\n\r\n  const [open, setOpen] = useState(true);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const buildGraph = () => async(event) => {\r\n    // let originalPaper = {\r\n    //   title: \r\n    // }\r\n    await loadMetaDataInfo(props.selectedDoi.citing);\r\n    relatedDoiState.map ( citation => {\r\n      if(citation.citing == props.selectedDoi.citing) {\r\n        let originalPaper = {\r\n          title: citation.metaData.title,\r\n          citations: citation.metaData.citation,\r\n          year: citation.metaData.year,\r\n          journal: '',\r\n          locator: '',\r\n          authors: citation.metaData.author,\r\n          url: '',\r\n          doi: citation.citing,\r\n        }\r\n        setCurrentOriginalPaper( originalPaper );\r\n        setCurrentPage('RelatedDoisLoadingPage');\r\n        setFetchingRelatedDoisStatus();\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n        { open ?\r\n            <div className={classes.root} >\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={open}\r\n                classes={{\r\n                paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                <IconButton id=\"rightDirectionCloseIcon\" onClick={handleDrawerClose}> \r\n                    {theme.direction === 'rtr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                </IconButton>\r\n                \r\n                <div style={{display: \"flex\", justifyContent: \"center\", width: \"calc(100% - 65px)\"}}>Paper Info</div>\r\n                </div>\r\n                <Divider />\r\n                  {\r\n                    props.selectedDoi.containMetaData ?\r\n                    <div style={{paddingLeft: \"8px\", paddingTop: \"5px\"}}>\r\n                    <Typography style={{fontSize: \"17px\"}} gutterBottom variant=\"h5\" component=\"h2\" className={classes.lineHeight1_2em}>\r\n                      <b>Title</b>: { props.selectedDoi.metaData.title}\r\n                    </Typography>\r\n                    <br></br>\r\n                    <Typography component=\"p\" className={classes.lineHeight1_5em}>\r\n                      <b>Source</b>: {props.selectedDoi.metaData.source_title}\r\n                    </Typography>\r\n                    <br></br>\r\n                    <Typography component=\"p\" className={classes.lineHeight1_5em}>\r\n                      <b>Authors</b>: {props.selectedDoi.metaData.author}\r\n                    </Typography>\r\n                    <br></br>\r\n                    <Typography\r\n                      color=\"textSecondary\"\r\n                      variant=\"subheading\"\r\n                      component=\"div\"\r\n                      className={classes.lineHeight1_5em}\r\n                      style={{ fontSize: \"14px\" }}\r\n                    >\r\n                      <b>DOI</b>: {props.selectedDoi.metaData.doi}\r\n                    </Typography>\r\n                    <Typography\r\n                      color=\"textSecondary\"\r\n                      variant=\"subheading\"\r\n                      component=\"div\"\r\n                      className={classes.lineHeight1_5em}\r\n                      style={{ fontSize: \"14px\"}}\r\n                    >\r\n                      <b>Year</b>:   {props.selectedDoi.metaData.year}\r\n                    </Typography> \r\n                    </div> :\r\n                    <Typography\r\n                      color=\"textSecondary\"\r\n                      variant=\"subheading\"\r\n                      component=\"div\"\r\n                      className={classes.lineHeight1_5em}\r\n                      style={{ fontSize: \"14px\", paddingLeft: \"8px\", paddingTop: \"5px\"}}\r\n                    >\r\n                      <b>DOI</b>:   {props.selectedDoi.citing}\r\n                      <br></br>\r\n                      <b>Creation</b>: {props.selectedDoi.creation}\r\n                    </Typography>\r\n                     }\r\n                    { props.selectedDoi.cited !== '' ?\r\n                      <Typography style={{display: \"flex\", justifyContent: \"center\", marginTop: \"10px\"}}>\r\n                        {\r\n                          !(props.selectedDoi.cited === 'original') ?\r\n                          <Button onClick={buildGraph()} variant=\"outlined\" style={{ width: \"110px\", height: \"28px\", fontSize: \"9px\"}}>\r\n                              Build Graph\r\n                          </Button> :\r\n                          \"Original Paper\"\r\n                        }\r\n                        \r\n                      </Typography> :\r\n                      \"\"\r\n                    }\r\n            </Drawer>\r\n            </div>\r\n        :\r\n        <IconButton onClick={handleDrawerOpen} style={{ position: \"absolute\", right: \"0px\" }}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        </IconButton>\r\n    }\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps=(state = totalState)=>{\r\n\r\n  return {\r\n    relatedDoiState: state.relatedDoiState,\r\n    selectedDoi: state.selectedDoi,\r\n  }\r\n}\r\n\r\nconst mapStateToDispatch=(dispatch)=>{\r\n  return {\r\n    loadMetaDataInfo: (payload) => {\r\n      dispatch({type:'LOAD_METADATA_OF_DOI', payload});\r\n    },\r\n    getArticles:(input, extraParams)=>{\r\n      dispatch({type:'GET_ALL_ARTICLES',input, extraParams});\r\n    },\r\n    setCurrentPage: (payload) => {\r\n      dispatch({type:'SET_CURRENT_PAGE', payload});\r\n    },\r\n    setCurrentOriginalPaper: (payload) => {\r\n      dispatch({type:'SET_CURRENT_ORIGINAL_PAPER', payload});\r\n    },\r\n    setFetchingRelatedDoisStatus: (payload) => {\r\n      dispatch({type:'SET_FETCHING_RELATED_DOIS_STATUS', payload});\r\n    }\r\n  }\r\n}\r\nRelatedDoiDetail.propTypes = {};\r\n\r\nRelatedDoiDetail.defaultProps = {};\r\n\r\nexport default connect(mapStateToProps, mapStateToDispatch)(RelatedDoiDetail);\r\n","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\utils\\function.util.js",[],"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\components\\RelatedDoisList.js",["135","136","137","138","139","140","141"],"import {React, useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {totalState }from '../store/states';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Link from '@material-ui/core/Link';\r\nimport { FilterNone } from '@material-ui/icons';\r\n\r\nconst drawerWidth = \"calc(20%)\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    position: \"absolute\",\r\n    top: \"64px\",\r\n    height: \"calc(100% - 65px)\",\r\n    boxShadow: \"-3px 3px 20px\"\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'space-between',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  card: {\r\n    margin: \"5px 10px\",\r\n    padding: \"unset\",\r\n  },\r\n  \r\n}));\r\n\r\n\r\n\r\nconst RelatedDoisList = (props) => {\r\n  const {relatedDoiState, currentOriginalPaper, setCurrentPage, loadMetaDataInfo, setSelectedDoi} = props;\r\n\r\n  const [open, setOpen] = useState(true);\r\n  const [focusedId, setFocusedId] = useState(-1);\r\n  const [selectedId, setSelectedId] = useState(0);\r\n  const [loadingMetaDoiId, setLoadingMetaDoiId] = useState(-1);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const loadMetaData = (id, cited) => (event) => {\r\n    setLoadingMetaDoiId(id);\r\n    loadMetaDataInfo(cited);\r\n  }\r\n\r\n  const focusDoi = (index, doi, isFocusChange) => {\r\n    setSelectedDoi(doi);\r\n\r\n\r\n    if(isFocusChange === true)\r\n      setFocusedId(index + 1);\r\n    else \r\n      setFocusedId(selectedId);\r\n  }\r\n\r\n  const selectItem = (id) => (event) => {\r\n    setSelectedId(id);\r\n  }\r\n\r\n  const backToSearchResult = () => {\r\n    setCurrentPage('SearchResultsPage');\r\n  }\r\n\r\n  const handleMouseOutOfList = () => {\r\n    if(selectedId === 0) {\r\n      focusOriginalPaper(false);\r\n    }\r\n    else if(selectedId > 0){\r\n      focusDoi(selectedId - 1, relatedDoiState[selectedId-1], false)\r\n    }\r\n  }\r\n\r\n  const focusOriginalPaper = (isFocusChange) => {\r\n    let selectedDoi =  {\r\n      cited: 'original',\r\n      creation: '',\r\n      oci: '',\r\n      author_sc: '',\r\n      citing: '',\r\n      journal_sc: '',\r\n      timespan: '',\r\n      containMetaData: false,\r\n      metaData: {\r\n          citation_count: '',\r\n          doi: '',\r\n          year: '',\r\n          source_id: '',\r\n          page: '',\r\n          reference: '',\r\n          author: '',\r\n          volume: '',\r\n          source_title: '',\r\n          issue: '',\r\n          oa_link: '',\r\n          citation: '',\r\n          title: '',\r\n          journal: '',\r\n      }\r\n    }\r\n    let metaData = {...selectedDoi.metaData}\r\n    metaData = {...metaData, \r\n                  title: currentOriginalPaper.title, \r\n                  doi: currentOriginalPaper.doi,\r\n                  year: currentOriginalPaper.year,\r\n                  author: currentOriginalPaper.authors,\r\n\r\n                }\r\n    selectedDoi = {...selectedDoi, metaData: metaData, containMetaData: true }\r\n    setSelectedDoi(selectedDoi);\r\n    if(isFocusChange === true)\r\n      setFocusedId(0);\r\n    else\r\n      setFocusedId(selectedId);\r\n  }\r\n  return (\r\n    <div>\r\n\r\n        { open ?\r\n            <div className={classes.root} >\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                  <Button onClick= { backToSearchResult } style={{ fontSize: \"12px\", marginTop: \"6px\"}} color=\"primary\">{`<< Back`}</Button>\r\n                  <IconButton id=\"leftDirectionCloseIcon\" onClick={handleDrawerClose} style={{ height: \"50px\", marginTop: \"auto\", marginBottom: \"auto\"}}>\r\n                      {theme.direction === 'ltr' ? <ChevronLeftIcon id=\"leftCloseListicon\"/> : <ChevronRightIcon id=\"rightCloseListicon\"/>}\r\n                  </IconButton>\r\n                </div>\r\n                <Divider />\r\n       \r\n                <List style={{ overflowY: \"auto\",className:\"scrollbar -webkit-scrollbar\"}} onMouseLeave={() => { handleMouseOutOfList(); articleslistMouseOut();}}>\r\n                  <ListItem button key=\"original\" style={{ paddingLeft: \"0px\", paddingRight: \"0px\", borderBottom: \"1px solid lightgray\", backgroundColor: ( selectedId === 0 ? \"rgb(232, 232, 232)\" : \"\") }}\r\n                    onMouseEnter={() => { focusOriginalPaper(true); articleslistMouseEvent(currentOriginalPaper); }}\r\n            \r\n                    onClick={selectItem(0)}\r\n                  >\r\n                      <Card raised\r\n                        style={{  height: \"auto\", width: \"100%\" , paddingBottom: \"5px\", boxShadow: \"none\", cursor: \"pointer\", background: \"transparent\"}}>\r\n                        <CardContent className={classes.card} >\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h6\" style={{ overflow: \"hidden\", textOverflow: \"ellipsis\", WebkitLineClamp: \"2\", display: \"-webkit-box\", WebkitBoxOrient: \"vertical\" , lineHeight: \"1.1em\", fontSize: \"18px\" }}>\r\n                            { currentOriginalPaper.title}\r\n                            </Typography>\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <Typography\r\n                                component=\"p\"\r\n                                color=\"textSecondary\"\r\n                                style={{ overflow: \"hidden\", textOverflow: \"ellipsis\", fontSize: \"13px\", height: \"22px\", WebkitLineClamp: \"1\" ,display: \"-webkit-box\", WebkitBoxOrient: \"vertical\"}}\r\n                            >\r\n                                { currentOriginalPaper.authors }           \r\n                            </Typography>\r\n                            <Typography\r\n                                color=\"textSecondary\"\r\n                                variant=\"subheading\"\r\n                                component=\"div\"\r\n                                style={{ lineHeight: \"1.8\", fontSize: \"13px\", marginTop: \"-3px\"}}\r\n                            >\r\n                             { currentOriginalPaper.year }\r\n                            </Typography>\r\n                            </div>\r\n                            \r\n                        </CardContent>\r\n                        {\r\n                          (focusedId === 0 || selectedId === 0)?\r\n                          <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\r\n                            <Link href={`http://dx.doi.org/${currentOriginalPaper.doi}`} variant=\"h6\" color=\"inherit\" target=\"_blank\" rel=\"opener\" style={{marginTop: \"-3px\"}}>\r\n                              <Button variant=\"outlined\" style={{ width: \"110px\", height: \"28px\", fontSize: \"9px\"}}>Open Link</Button>\r\n                            </Link>\r\n                              <div style={{ color: \"blue\", textAlign: \"center\", fontSize: \"12px\", width: \"110px\", marginTop: \"4px\" }}>\r\n                                Original Paper\r\n                              </div>\r\n                          </div> : \r\n                          \"\"\r\n                        }\r\n                    </Card>\r\n                    <Divider />\r\n                  </ListItem>\r\n                  {relatedDoiState.map((doi, index) => (\r\n                    \r\n                    <ListItem button key={doi.citing} style={{ paddingLeft: \"0px\", paddingRight: \"0px\", borderBottom: \"1px solid lightgray\", backgroundColor: ( selectedId === index + 1 ? \"rgb(232, 232, 232)\" : \"\")}} \r\n                    onMouseEnter={() => { focusDoi(index, doi, true);articleslistMouseEvent(doi); }}\r\n                    onClick={selectItem(index + 1)}\r\n                    >\r\n                      <Card raised\r\n                        style={{  height: \"auto\", width: \"100%\" , paddingBottom: \"5px\", boxShadow: \"none\", cursor: \"pointer\", background: \"transparent\"}}>\r\n                        <CardContent className={classes.card} >\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h6\" style={{ overflow: \"hidden\", textOverflow: \"ellipsis\", WebkitLineClamp: \"2\", display: \"-webkit-box\", WebkitBoxOrient: \"vertical\" , lineHeight: \"1.1em\", fontSize: \"18px\" }}>\r\n                            { doi.containMetaData ? doi.metaData.title : doi.citing }\r\n                            </Typography>\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <Typography\r\n                                component=\"p\"\r\n                                color=\"textSecondary\"\r\n                                style={{ overflow: \"hidden\", textOverflow: \"ellipsis\", fontSize: \"13px\", height: \"22px\", WebkitLineClamp: \"1\" ,display: \"-webkit-box\", WebkitBoxOrient: \"vertical\"}}\r\n                            >\r\n                                {doi.containMetaData ? doi.metaData.doi : doi.author}           \r\n                            </Typography>\r\n                            <Typography\r\n                                color=\"textSecondary\"\r\n                                variant=\"subheading\"\r\n                                component=\"div\"\r\n                                style={{ lineHeight: \"1.8\", fontSize: \"13px\", marginTop: \"-3px\"}}\r\n                            >\r\n                              { doi.containMetaData ? doi.metaData.year : doi.creation}\r\n                            </Typography>\r\n                            </div>\r\n                            \r\n                        </CardContent>\r\n                        { ((index + 1) === focusedId || selectedId === index + 1) ?\r\n                          <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\r\n                            <Link href={`http://dx.doi.org/${doi.citing}`} variant=\"h6\" color=\"inherit\" target=\"_blank\" rel=\"opener\" style={{marginTop: \"-3px\"}}>\r\n                              <Button variant=\"outlined\" style={{ width: \"110px\", height: \"28px\", fontSize: \"9px\"}}>Open Link</Button>\r\n                            </Link>\r\n                              { doi.containMetaData ?  \r\n                                  <Button variant=\"outlined\" disabled=\"true\" style={{ width: \"110px\", height: \"28px\", fontSize: \"9px\"}}>Load Metadata</Button> \r\n                                :\r\n                                <Button variant=\"outlined\" onClick={loadMetaData(index, doi.citing)} style={{ width: \"110px\", height: \"28px\", fontSize: \"9px\"}}>\r\n                                  {\r\n                                    (loadingMetaDoiId === index) ? \r\n                                    <CircularProgress style={{ width: \"18px\", height: \"18px\"}} /> :\r\n                                    \"Load Metadata\"\r\n                                  }\r\n    \r\n                                  \r\n                                </Button>\r\n                              }\r\n                          </div> :\r\n                          \"\"\r\n                        }\r\n                    </Card>\r\n                    <Divider />\r\n                  </ListItem>\r\n                ))}\r\n                </List>\r\n            </Drawer>\r\n            </div>\r\n        :\r\n        <IconButton onClick={handleDrawerOpen} style={{ position: \"absolute\" }}>\r\n            {theme.direction === 'rtr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        </IconButton>\r\n    }\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps=(state = totalState)=>{\r\n\r\n  return {\r\n    relatedDoiState: state.relatedDoiState,\r\n    currentOriginalPaper: state.currentOriginalPaper,\r\n  }\r\n}\r\n\r\nconst mapStateToDispatch=(dispatch)=>{\r\n  return {\r\n   setCurrentPage: (payload) => {\r\n      dispatch({type:'SET_CURRENT_PAGE', payload});\r\n    },\r\n    loadMetaDataInfo: (payload) => {\r\n      dispatch({type:'LOAD_METADATA_OF_DOI', payload});\r\n    },\r\n    setSelectedDoi: (payload) => {\r\n      dispatch({type:'SET_SELECTED_DOI', payload});\r\n    }\r\n  }\r\n}\r\nRelatedDoisList.propTypes = {};\r\n\r\nRelatedDoisList.defaultProps = {};\r\n\r\nfunction articleslistMouseEvent(overedArticle){\r\n  var isConnectDois = new Array();\r\n  if (document.getElementsByTagName('line').length > 0) {\r\n      for (let item of document.getElementsByTagName('line')) {\r\n          item.style.opacity = 0.2;\r\n          if (item.__data__.source.doi == overedArticle.citing) {\r\n              if (isConnectDois.indexOf(item.__data__.source.doi) == -1) isConnectDois.push(item.__data__.source.doi)\r\n              isConnectDois.push(item.__data__.target.doi)\r\n              item.style.opacity = 1;\r\n          } else if (item.__data__.target.doi == overedArticle.citing) {\r\n              if (isConnectDois.indexOf(item.__data__.target.doi) == -1) isConnectDois.push(item.__data__.target.doi)\r\n              isConnectDois.push(item.__data__.source.doi)\r\n              item.style.opacity = 1;\r\n          }\r\n      }\r\n  } else {\r\n      isConnectDois.push(overedArticle.citing);\r\n  }\r\n  isConnected(isConnectDois);\r\n}\r\nfunction isConnected(isConnectDois){\r\n  for (let item of document.getElementsByTagName('circle')) {\r\n      item.style.opacity = 0.2\r\n  }\r\n  for (let item of document.getElementsByTagName('circle')) {\r\n\r\n      for (let doi of isConnectDois) {\r\n          if (doi == item.__data__.doi) {\r\n              item.style.opacity = 1\r\n          }\r\n      }\r\n  }\r\n}\r\n\r\nfunction articleslistMouseOut(){\r\n  for (let item of document.getElementsByTagName('line')) {\r\n    item.style.opacity = 1;\r\n  }\r\n  for (let item of document.getElementsByTagName('circle')) {\r\n    item.style.opacity = 1\r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapStateToDispatch)(RelatedDoisList);\r\n","E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\services\\axios.service.js",["142"],"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\utils\\index.js",[],"E:\\MyProjects\\PaperCiations\\dev\\again\\papercitations\\src\\components\\NetworkDiagram.js",["143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"import { React, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { totalState } from '../store/states';\r\nimport $ from \"jquery\";\r\nimport * as d3 from \"d3\";\r\n\r\n\r\nconst NetworkDiagram = (props) => {\r\n\r\n    // const {setSelectedDoi} = props;\r\n    const {relatedDoiForGraphState, currentOriginalPaper, setSelectedDoi} = props;\r\n    useEffect(() => {\r\n        $(window).on(\"resize\", function () {\r\n          initDiagram()\r\n          drawDiagram(props)\r\n        }).trigger(\"resize\");\r\n      })\r\n    \r\n    \r\n    function initDiagram(){\r\n        $(\"svg *\").remove();\r\n        let svg = d3.select(\"svg\");\r\n        let width = $(svg.node()).parent().width();\r\n        let height = $(svg.node()).parent().height();\r\n        svg.attr(\"width\", width);\r\n        svg.attr(\"height\", height);\r\n    \r\n        d3.select(\"svg#networkgraph\").append('defs')\r\n          .append('marker')\r\n          .attr(\"id\", \"Triangle\")\r\n          .attr(\"refX\", 17)\r\n          .attr(\"refY\", 3)\r\n          .attr(\"markerUnits\", 'userSpaceOnUse')\r\n          .attr(\"markerWidth\", 6)\r\n          .attr(\"markerHeight\", 9)\r\n          .attr(\"orient\", 'auto')\r\n          .append('path')\r\n          .attr(\"d\", 'M 0 0 6 3 0 6 1.5 3');\r\n      }\r\n\r\n      function focusOriginalPaper() {\r\n        let selectedDoi =  {\r\n          cited: 'original',\r\n          creation: '',\r\n          oci: '',\r\n          author_sc: '',\r\n          citing: '',\r\n          journal_sc: '',\r\n          timespan: '',\r\n          containMetaData: false,\r\n          metaData: {\r\n              citation_count: '',\r\n              doi: '',\r\n              year: '',\r\n              source_id: '',\r\n              page: '',\r\n              reference: '',\r\n              author: '',\r\n              volume: '',\r\n              source_title: '',\r\n              issue: '',\r\n              oa_link: '',\r\n              citation: '',\r\n              title: '',\r\n              journal: '',\r\n          }\r\n        }\r\n        let metaData = {...selectedDoi.metaData}\r\n        metaData = {...metaData, \r\n                      title: currentOriginalPaper.title, \r\n                      doi: currentOriginalPaper.doi,\r\n                      year: currentOriginalPaper.year,\r\n                      author: currentOriginalPaper.authors,\r\n    \r\n                    }\r\n        selectedDoi = {...selectedDoi, metaData: metaData, containMetaData: true }\r\n        setSelectedDoi(selectedDoi);\r\n      }\r\n      function drawDiagram(graph) {\r\n\r\n        \r\n        let svg = d3.select(\"svg#networkgraph\"),\r\n          width = +svg.attr(\"width\"),\r\n          height = +svg.attr(\"height\");\r\n    \r\n\r\n        svg = svg\r\n          .call(d3.zoom().on(\"zoom\", function () {\r\n            svg.attr(\"transform\", d3.event.transform)\r\n          })).append(\"g\");\r\n    \r\n        var color = d3.scaleOrdinal(d3.schemeCategory20);\r\n        let degreeMax = 0;\r\n        graph.nodes.forEach(d => {\r\n          d.degreeCentrality = graph.links\r\n            .filter(p => p.source === d || p.target === d || p.source === d.id || p.target === d.id)\r\n            .length;\r\n          degreeMax = Math.max(d.degreeCentrality, degreeMax);\r\n        });\r\n        // links\r\n        svg.append(\"g\")\r\n          .attr(\"class\", \"links\")\r\n          .selectAll(\"line\")\r\n          .data(graph.links)\r\n          .enter()\r\n          .append(\"line\");\r\n    \r\n        var link = d3.select(\"g.links\")\r\n          .selectAll(\"line\")\r\n          .attr(\"style\", function (d) { return \"stroke:rgba(56,142,60, 0.6)\"; })\r\n          .attr(\"stroke-width\", function (d) { return 1; })\r\n    \r\n          .on(\"mouseover\", d => {\r\n            circles.style(\"opacity\", o => {\r\n              return (o.doi == d.source.doi || o.doi == d.target.doi) ? 1 : 0.1\r\n            });\r\n            fullCircles.style(\"opacity\", o => {\r\n              return (o.doi == d.source.doi || o.doi == d.target.doi) ? 0.3 : 0.1\r\n            });\r\n            link.style(\"stroke-opacity\", o => {\r\n              return (o.source == d.source && o.target == d.target) ? 1 : 0.1\r\n            });\r\n            lables.style(\"opacity\", o => {\r\n              return (o.source == d.source && o.target == d.target) ? 1 : 0.1\r\n            });\r\n          })\r\n          .on('mouseout', d => {\r\n            circles.style(\"opacity\", 1);\r\n            link.style(\"stroke-opacity\", 1);\r\n            fullCircles.style(\"opacity\", 0.3);\r\n            lables.style(\"opacity\", 1);\r\n          })\r\n          .attr(\"marker-end\", \"url(#Triangle)\");\r\n    \r\n        // nodes\r\n        svg.append(\"g\")\r\n          .attr(\"class\", \"nodes\")\r\n          .selectAll(\"g\")\r\n          .data(graph.nodes)\r\n          .enter()\r\n          .append(\"g\");\r\n    \r\n          var node = d3.select(\"g.nodes\")\r\n          .selectAll(\"g\");\r\n    \r\n          var fullCircles = node.append(\"circle\")\r\n          .attr(\"r\", d => d.nodeLevel==0? 15 : 8)\r\n          .attr(\"fill\", function (d) { \r\n            return d.nodeLevel==0?\"rgba(56,142,60, 0.9)\":d.nodeLevel==1?\"rgba(56,142,60, 0.6)\":\"rgba(56,142,60, 0.3)\"; })\r\n    \r\n        var circles = node.append(\"circle\")\r\n          .attr(\"r\", d => d.nodeLevel==0? 9.5 : 3.5)\r\n          .attr(\"fill\", function (d) {\r\n            return d.nodeLevel==0?\"rgba(56,142,60, 1)\":d.nodeLevel==1?\"rgba(56,142,60, 0.7)\":\"rgba(56,142,60, 0.4)\"; })\r\n          .on(\"mouseover\", function (d) {\r\n            let highlightDOIs = [d.doi];\r\n            for (let p of graph.links) {\r\n              if (p.source.doi == d.doi) {\r\n                highlightDOIs.push(p.target.doi);\r\n              }\r\n              if (p.target.doi == d.doi) {\r\n                highlightDOIs.push(p.source.doi);\r\n              }\r\n            }\r\n            link.style(\"stroke-opacity\", o => {\r\n              return (o.source.doi == d.doi || o.target.doi == d.doi) ? 1 : 0.1\r\n            });\r\n            circles.style(\"opacity\", o => {\r\n              return highlightDOIs.indexOf(o.doi) > -1 ? 1 : 0.1\r\n            });\r\n            fullCircles.style(\"opacity\", o => {\r\n              return highlightDOIs.indexOf(o.doi) > -1 ? 0.3 : 0.1\r\n            });\r\n            lables.style(\"opacity\", o => {\r\n              return highlightDOIs.indexOf(o.doi) > -1 ? 1 : 0.1\r\n            });\r\n            console.log(d.doi);\r\n            relatedDoiForGraphState.map(doi => {\r\n              if(doi.citing == d.doi) {\r\n                setSelectedDoi(doi)\r\n              }\r\n            })\r\n            if(currentOriginalPaper.doi == d.doi) {\r\n              focusOriginalPaper();\r\n            }\r\n            \r\n          })\r\n          .on('mouseout', d => {\r\n            circles.style(\"opacity\", 1);\r\n            link.style(\"stroke-opacity\", 1);\r\n            fullCircles.style(\"opacity\", 0.3);\r\n            lables.style(\"opacity\", 1);\r\n          })\r\n          .call(d3.drag()\r\n            .on(\"start\", dragstarted)\r\n            .on(\"drag\", dragged)\r\n            .on(\"end\", dragended));\r\n    \r\n        var lables = node.append(\"text\")\r\n          .attr(\"font-size\",7)\r\n          .text(function (d) {\r\n            return (d.authors && d.authors.length > 0 ? d.authors.split(',')[0] + \", \" : \"\") + d.year;\r\n          })\r\n          .attr('text-anchor', 'middle')\r\n          .attr('x', 0)\r\n          .attr('y', -20);\r\n    \r\n        node.append(\"title\")\r\n          .attr(\"font-size\",7)\r\n          .text(function (d) { return d.title; });\r\n    \r\n        // Let's list the force we wanna apply on the network\r\n        var simulation = d3.forceSimulation(graph.nodes)                 // Force algorithm is applied to data.nodes\r\n          .force(\"link\", d3.forceLink()                               // This force provides links between nodes\r\n            .id(function (d) { return d.id; })                     // This provide  the id of a node\r\n            .links(graph.links)                                    // and this the list of links\r\n          )\r\n          .force(\"charge\", d3.forceManyBody().strength(-400).distanceMax(270).distanceMin(50))             // This adds repulsion between nodes. Play with the -400 for the repulsion strength\r\n          .force(\"center\", d3.forceCenter(width / 2, height / 2))     // This force attracts nodes to the center of the svg area\r\n          .on(\"tick\", ticked);\r\n    \r\n        function ticked() {\r\n          link\r\n            .attr(\"x1\", function (d) { return d.source.x; })\r\n            .attr(\"y1\", function (d) { return d.source.y; })\r\n            .attr(\"x2\", function (d) { return d.target.x; })\r\n            .attr(\"y2\", function (d) { return d.target.y; });\r\n    \r\n          node\r\n            .attr(\"transform\", function (d) {\r\n              return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n            })\r\n        }\r\n    \r\n        function dragstarted(d) {\r\n          if (!d3.event.active) simulation.alphaTarget(0.3).restart();\r\n          d.fx = d.x;\r\n          d.fy = d.y;\r\n        }\r\n    \r\n        function dragged(d) {\r\n          d.fx = d3.event.x;\r\n          d.fy = d3.event.y;\r\n        }\r\n    \r\n        function dragended(d) {\r\n          if (!d3.event.active) simulation.alphaTarget(0);\r\n          d.fx = null;\r\n          d.fy = null;\r\n        }\r\n      }\r\n    let width = window.innerWidth;\r\n    let height = window.innerHeight;\r\n        return (\r\n  \r\n          <svg id=\"networkgraph\"\r\n          width={width} height={(height - 90)} >\r\n          </svg>\r\n        )\r\n    }\r\n    \r\n\r\n const mapStateToProps = (state) => {\r\n   return {\r\n    currentOriginalPaper: state.currentOriginalPaper,\r\n    relatedDoiForGraphState: state.relatedDoiForGraphState,\r\n   }\r\n} \r\nconst mapStateToDispatch=(dispatch)=>{\r\n  return {\r\n\r\n    setSelectedDoi: (payload) => {\r\n      dispatch({type:'SET_SELECTED_DOI', payload});\r\n  }\r\n}\r\n\r\n}\r\n\r\nNetworkDiagram.propTypes = {};\r\n\r\nNetworkDiagram.defaultProps = {};\r\nexport default  connect(mapStateToProps, mapStateToDispatch)( NetworkDiagram ) ;\r\n",{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":4,"column":9,"nodeType":"172","messageId":"173","endLine":4,"endColumn":21},{"ruleId":"170","severity":1,"message":"174","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":32},{"ruleId":"175","severity":1,"message":"176","line":28,"column":50,"nodeType":"177","messageId":"178","endLine":28,"endColumn":52},{"ruleId":"170","severity":1,"message":"179","line":94,"column":13,"nodeType":"172","messageId":"173","endLine":94,"endColumn":21},{"ruleId":"180","severity":1,"message":"181","line":95,"column":23,"nodeType":"182","messageId":"183","endLine":95,"endColumn":25},{"ruleId":"184","severity":1,"message":"185","line":88,"column":13,"nodeType":"186","endLine":88,"endColumn":33},{"ruleId":"170","severity":1,"message":"187","line":7,"column":74,"nodeType":"172","messageId":"173","endLine":7,"endColumn":88},{"ruleId":"188","severity":1,"message":"189","line":16,"column":20,"nodeType":"190","endLine":16,"endColumn":30},{"ruleId":"188","severity":1,"message":"191","line":17,"column":21,"nodeType":"192","endLine":17,"endColumn":36},{"ruleId":"175","severity":1,"message":"176","line":18,"column":31,"nodeType":"177","messageId":"178","endLine":18,"endColumn":33},{"ruleId":"180","severity":1,"message":"181","line":23,"column":24,"nodeType":"182","messageId":"183","endLine":23,"endColumn":26},{"ruleId":"188","severity":1,"message":"193","line":14,"column":6,"nodeType":"192","endLine":14,"endColumn":8,"suggestions":"194"},{"ruleId":"170","severity":1,"message":"195","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"176","line":12,"column":40,"nodeType":"177","messageId":"178","endLine":12,"endColumn":42},{"ruleId":"180","severity":1,"message":"181","line":13,"column":23,"nodeType":"182","messageId":"183","endLine":13,"endColumn":25},{"ruleId":"196","severity":1,"message":"197","line":67,"column":40,"nodeType":"198","messageId":"199","endLine":67,"endColumn":41},{"ruleId":"170","severity":1,"message":"200","line":3,"column":13,"nodeType":"172","messageId":"173","endLine":3,"endColumn":15},{"ruleId":"170","severity":1,"message":"201","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":9},{"ruleId":"170","severity":1,"message":"202","line":70,"column":11,"nodeType":"172","messageId":"173","endLine":70,"endColumn":22},{"ruleId":"175","severity":1,"message":"176","line":87,"column":36,"nodeType":"177","messageId":"178","endLine":87,"endColumn":38},{"ruleId":"180","severity":1,"message":"181","line":88,"column":26,"nodeType":"182","messageId":"183","endLine":88,"endColumn":28},{"ruleId":"170","severity":1,"message":"203","line":18,"column":10,"nodeType":"172","messageId":"173","endLine":18,"endColumn":20},{"ruleId":"204","severity":1,"message":"205","line":326,"column":23,"nodeType":"206","messageId":"207","endLine":326,"endColumn":34},{"ruleId":"180","severity":1,"message":"181","line":330,"column":40,"nodeType":"182","messageId":"183","endLine":330,"endColumn":42},{"ruleId":"180","severity":1,"message":"181","line":331,"column":67,"nodeType":"182","messageId":"183","endLine":331,"endColumn":69},{"ruleId":"180","severity":1,"message":"181","line":334,"column":47,"nodeType":"182","messageId":"183","endLine":334,"endColumn":49},{"ruleId":"180","severity":1,"message":"181","line":335,"column":67,"nodeType":"182","messageId":"183","endLine":335,"endColumn":69},{"ruleId":"180","severity":1,"message":"181","line":352,"column":19,"nodeType":"182","messageId":"183","endLine":352,"endColumn":21},{"ruleId":"170","severity":1,"message":"208","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":27},{"ruleId":"170","severity":1,"message":"209","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":20},{"ruleId":"170","severity":1,"message":"210","line":92,"column":13,"nodeType":"172","messageId":"173","endLine":92,"endColumn":18},{"ruleId":"180","severity":1,"message":"181","line":115,"column":29,"nodeType":"182","messageId":"183","endLine":115,"endColumn":31},{"ruleId":"180","severity":1,"message":"181","line":115,"column":54,"nodeType":"182","messageId":"183","endLine":115,"endColumn":56},{"ruleId":"180","severity":1,"message":"181","line":118,"column":29,"nodeType":"182","messageId":"183","endLine":118,"endColumn":31},{"ruleId":"180","severity":1,"message":"181","line":118,"column":54,"nodeType":"182","messageId":"183","endLine":118,"endColumn":56},{"ruleId":"180","severity":1,"message":"181","line":121,"column":32,"nodeType":"182","messageId":"183","endLine":121,"endColumn":34},{"ruleId":"180","severity":1,"message":"181","line":121,"column":56,"nodeType":"182","messageId":"183","endLine":121,"endColumn":58},{"ruleId":"180","severity":1,"message":"181","line":124,"column":32,"nodeType":"182","messageId":"183","endLine":124,"endColumn":34},{"ruleId":"180","severity":1,"message":"181","line":124,"column":56,"nodeType":"182","messageId":"183","endLine":124,"endColumn":58},{"ruleId":"180","severity":1,"message":"181","line":147,"column":38,"nodeType":"182","messageId":"183","endLine":147,"endColumn":40},{"ruleId":"180","severity":1,"message":"181","line":149,"column":31,"nodeType":"182","messageId":"183","endLine":149,"endColumn":33},{"ruleId":"180","severity":1,"message":"181","line":149,"column":69,"nodeType":"182","messageId":"183","endLine":149,"endColumn":71},{"ruleId":"180","severity":1,"message":"181","line":152,"column":38,"nodeType":"182","messageId":"183","endLine":152,"endColumn":40},{"ruleId":"180","severity":1,"message":"181","line":154,"column":31,"nodeType":"182","messageId":"183","endLine":154,"endColumn":33},{"ruleId":"180","severity":1,"message":"181","line":154,"column":67,"nodeType":"182","messageId":"183","endLine":154,"endColumn":69},{"ruleId":"180","severity":1,"message":"181","line":158,"column":32,"nodeType":"182","messageId":"183","endLine":158,"endColumn":34},{"ruleId":"180","severity":1,"message":"181","line":161,"column":32,"nodeType":"182","messageId":"183","endLine":161,"endColumn":34},{"ruleId":"180","severity":1,"message":"181","line":166,"column":36,"nodeType":"182","messageId":"183","endLine":166,"endColumn":38},{"ruleId":"180","severity":1,"message":"181","line":166,"column":61,"nodeType":"182","messageId":"183","endLine":166,"endColumn":63},{"ruleId":"175","severity":1,"message":"176","line":178,"column":45,"nodeType":"177","messageId":"178","endLine":178,"endColumn":47},{"ruleId":"180","severity":1,"message":"181","line":179,"column":29,"nodeType":"182","messageId":"183","endLine":179,"endColumn":31},{"ruleId":"180","severity":1,"message":"181","line":183,"column":41,"nodeType":"182","messageId":"183","endLine":183,"endColumn":43},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"no-unused-vars","'createLogger' is defined but never used.","Identifier","unusedVar","'buildGetCitationsQuery' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'interval' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getRelatedDois' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'maindata' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'totaldata' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ArrayExpression","React Hook useEffect has missing dependencies: 'curOffset', 'getArticles', and 'searchArticleInputValue'. Either include them or remove the dependency array.",["213"],"'useEffect' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'d3' is defined but never used.","'$' is defined but never used.","'selectedDoi' is assigned a value but never used.","'FilterNone' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'StraightenRounded' is defined but never used.","'totalState' is defined but never used.","'color' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},"Update the dependencies array to be: [curOffset, getArticles, searchArticleInputValue]",{"range":"216","text":"217"},[362,364],"[curOffset, getArticles, searchArticleInputValue]"]